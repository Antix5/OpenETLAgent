# Pipeline definition using the new structure with multiple inputs/outputs

inputs:
  orders: # Logical name for the main input
    path: input_folder/orders.csv
    file_schema:
      name: RawOrders
      columns:
        order_id:
          name: order_id
          type: integer
          description: Unique numeric identifier for the order.
        customer_id:
          name: customer_id
          type: integer
          description: Numeric identifier for the customer. Links to customers file.
        product_sku:
          name: product_sku
          type: string
          description: Stock Keeping Unit for the product.
        quantity:
          name: quantity
          type: positive integer
          description: Number of units ordered.
        unit_price:
          name: unit_price
          type: float
          description: Price per unit of the product.
        order_timestamp:
          name: order_timestamp
          type: string
          description: Timestamp when the order was placed.
        status_code:
          name: status_code
          type: integer
          description: Numeric code representing order status.
  customers: # Logical name for the lookup input
    path: input_folder/customers.csv
    file_schema:
      name: CustomerLookup
      columns:
        cust_id: # Name matches the 'right_on' key in bind operation
          name: cust_id
          type: integer
          description: Unique identifier for the customer in the lookup file.
        customer_name: # Name matches the column added in bind operation
          name: customer_name
          type: string
          description: Full name of the customer.
        customer_country: # Name matches the column added in bind operation
          name: customer_country
          type: string
          description: Registration country of the customer.

outputs:
  enriched_orders: # Logical name for the output
    path: output_folder/enriched_orders.csv
    format: csv
    file_schema:
      name: EnrichedOrders
      columns:
        order_ref:
          name: order_ref
          type: string
          description: Unique order reference string, prefixed with "ORD-".
        customer_name:
          name: customer_name
          type: string
          description: Full name of the customer (looked up from customers.csv using customer_id/cust_id). Null if customer not found.
        customer_country:
          name: customer_country
          type: string
          description: Registration country of the customer (looked up from customers.csv). Null if customer not found.
        product_category:
          name: product_category
          type: string
          description: Broad category of the product derived from the SKU prefix.
        total_price:
          name: total_price
          type: float
          description: Total price for the line item (quantity * unit_price).
        is_shipped:
          name: is_shipped
          type: boolean
          description: True if status_code is 3, False otherwise.

# Operations embedded directly in the pipeline definition
operations:
- operation_type: assignation
  output_column: order_prefix
  value: ORD-
- operation_type: casting
  output_column: order_id_str
  input_column: order_id
  target_type: string
- operation_type: concatenation
  output_column: order_ref
  input_columns:
  - order_prefix
  - order_id_str
  separator: ''
- operation_type: bind
  output_column: ignored # Output column is ignored for bind
  # Use the logical input name 'customers' here, resolved by apply_operations
  right_file_path: customers
  right_schema_columns: # Schema of the right file (customers)
    cust_id: integer
    customer_name: string
    customer_country: string
  left_on: customer_id # From the 'orders' input
  right_on: cust_id # From the 'customers' input
  how: left
  columns_to_add: # Columns from 'customers' to add
  - customer_name
  - customer_country
- operation_type: equality
  output_column: customer_name
  input_column: customer_name # This now refers to the column added by bind
- operation_type: equality
  output_column: customer_country
  input_column: customer_country # This now refers to the column added by bind
- operation_type: application
  output_column: product_category
  input_columns:
  - product_sku
  function_str: 'lambda r: r[''product_sku''][:3]'
- operation_type: arithmetic
  output_column: total_price
  input_columns:
  - quantity
  - unit_price
  operator: '*'
- operation_type: comparison
  output_column: is_shipped
  input_column: status_code
  operator: ==
  value: '3'
